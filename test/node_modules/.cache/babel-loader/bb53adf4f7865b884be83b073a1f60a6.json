{"ast":null,"code":"var _jsxFileName = \"/Users/jaehyun/dev/practice-react/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css'; // APP 컴포넌트의 디자인 css\n\nimport TOC from './components/TOC';\nimport Content from './components/Content';\nimport Subject from './components/Subject';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // state 초기화\n      mode: \"read\",\n      selected_content_id: 2,\n      subject: {\n        title: 'WEB',\n        sub: \"World Wide Web!\"\n      },\n      welcome: {\n        title: \"welcome\",\n        desc: \"Hello, React!!\"\n      },\n      contents: [{\n        id: 1,\n        title: 'HTML',\n        desc: 'Html is for information '\n      }, {\n        id: 2,\n        title: 'CSS',\n        desc: 'CSS is for information '\n      }]\n    };\n  } // state의 값이 바뀌면 render()함수가 다시 호출되며 하위에 컴포넌트도 다시 호출된다.\n\n\n  render() {\n    let _title,\n        _desc = '공란';\n\n    if (this.state.mode === \"welcome\") {\n      _title = this.state.welcome.title;\n      _desc = this.state.welcome.desc;\n    } else if (this.state.mode === \"read\") {\n      var i = 0;\n\n      while (i < this.state.selected_content_id.length) {\n        var data = this.state.contents[i];\n        console.log(\"\\uB370\\uC774\\uD1301 \".concat(data.id, \" \\uB370\\uC774\\uD1302 \").concat(this.state.selected_content_id));\n\n        if (data.id === this.state.selected_content_id) {\n          _title = data.title;\n          _desc = data.desc;\n          break;\n        }\n\n        i = i + 1;\n      }\n    }\n\n    console.log('render', this);\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(Subject, {\n      title: this.state.subject.title,\n      sub: this.state.subject.sub,\n      onChangePage: function () {\n        this.setState({\n          mode: \"welcome\"\n        });\n      }.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }), React.createElement(TOC, {\n      onChangePage: function (id) {\n        this.setState({\n          mode: 'read',\n          selected_content_id: Number(id)\n        });\n      }.bind(this),\n      data: this.state.contents,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), React.createElement(Content, {\n      title: _title,\n      desc: _desc,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/jaehyun/dev/practice-react/src/App.js"],"names":["React","Component","TOC","Content","Subject","App","constructor","props","state","mode","selected_content_id","subject","title","sub","welcome","desc","contents","id","render","_title","_desc","i","length","data","console","log","setState","bind","Number"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css'; // APP 컴포넌트의 디자인 css\nimport TOC from './components/TOC'\nimport Content from './components/Content'\nimport Subject from './components/Subject'\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { // state 초기화\n            mode: \"read\",\n            selected_content_id: 2,\n            subject : {title: 'WEB', sub: \"World Wide Web!\"},\n            welcome: {title: \"welcome\", desc : \"Hello, React!!\"},\n            contents : [\n                {id:1, title: 'HTML', desc: 'Html is for information '},\n                {id:2, title: 'CSS', desc: 'CSS is for information '},\n            ]\n        }\n    }\n    // state의 값이 바뀌면 render()함수가 다시 호출되며 하위에 컴포넌트도 다시 호출된다.\n    render() {\n        let _title, _desc = '공란';\n        if(this.state.mode === \"welcome\"){\n            _title = this.state.welcome.title;\n            _desc = this.state.welcome.desc;\n        } else if(this.state.mode === \"read\"){\n            var i = 0;\n            while(i < this.state.selected_content_id.length){\n                var data = this.state.contents[i];\n                console.log(`데이터1 ${data.id} 데이터2 ${this.state.selected_content_id}`)\n                if(data.id === this.state.selected_content_id){\n                    _title = data.title;\n                    _desc = data.desc;\n                    break;\n                }\n                i = i+1;\n            }\n        }\n        console.log('render', this);\n      return (\n          <div className=\"App\">\n              {/*state를 바꾸는 방법 setState(), bind로 this를 묶어준다.*/}\n              <Subject\n                  title = {this.state.subject.title}\n                  sub = {this.state.subject.sub}\n                  onChangePage = {function(){\n                      this.setState({mode : \"welcome\"})\n                  }.bind(this)}\n              />\n              <TOC\n              onChangePage = {function (id) {\n                  this.setState({\n                      mode: 'read',\n                      selected_content_id: Number(id)\n                  })\n              }.bind(this)}\n              data={this.state.contents}\n              />\n              <Content\n                  title = {_title}\n                  desc = {_desc}/>\n          </div>\n      );\n    }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}